name: CI/CD PROD

on:
  push:
    branches:
      - docker

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  build:
    environment:
      name: prod
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # A separate PAT is required to be able to trigger a deployment.
          # More: https://docs.github.com/en/actions/using-workflows/triggering-a-workflow
          github-token: ${{ secrets.TOKEN }}
  deploy:
    name: Run latest version on server
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Deploy to VDS
        uses: appleboy/ssh-action@master
        env:
          COMPOSE_CMD: docker compose -p marvel_quotes_prod
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          GITHUB_API_URL: https://api.github.com
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}
          envs: ENV_FILE_CONTENT, COMPOSE_CMD, GITHUB_TOKEN, GITHUB_API_URL
          script: |
            cd docker
            curl \
            -H "Accept: application/vnd.github.v3.raw" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -o docker-compose.yaml \
            "$GITHUB_API_URL/repos/hum4noidx/marvel-quotes/contents/docker-compose.prod.yaml?ref=develop"
            set -eu
            sudo echo "$ENV_FILE_CONTENT" > .env
            docker login -u ${{ github.repository_owner }} -p ${{ secrets.TOKEN }} ghcr.io
            eval $COMPOSE_CMD pull
            eval $COMPOSE_CMD up -d --force-recreate --build main
            docker image prune -f
            rm .env
            rm docker-compose.yaml